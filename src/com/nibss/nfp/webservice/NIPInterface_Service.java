
package com.nibss.nfp.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "NIPInterface", targetNamespace = "http://core.nip.nibss/", wsdlLocation = "http://192.168.100.22:86/NIPWS/NIPInterface?wsdl")
public class NIPInterface_Service
    extends Service
{

    private final static URL NIPINTERFACE_WSDL_LOCATION;
    private final static WebServiceException NIPINTERFACE_EXCEPTION;
    private final static QName NIPINTERFACE_QNAME = new QName("http://core.nip.nibss/", "NIPInterface");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://192.168.100.22:86/NIPWS/NIPInterface?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        NIPINTERFACE_WSDL_LOCATION = url;
        NIPINTERFACE_EXCEPTION = e;
    }

    public NIPInterface_Service() {
        super(__getWsdlLocation(), NIPINTERFACE_QNAME);
    }

    public NIPInterface_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), NIPINTERFACE_QNAME, features);
    }

    public NIPInterface_Service(URL wsdlLocation) {
        super(wsdlLocation, NIPINTERFACE_QNAME);
    }

    public NIPInterface_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NIPINTERFACE_QNAME, features);
    }

    public NIPInterface_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NIPInterface_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns NIPInterface
     */
    @WebEndpoint(name = "NIPInterfacePort")
    public NIPInterface getNIPInterfacePort() {
        return super.getPort(new QName("http://core.nip.nibss/", "NIPInterfacePort"), NIPInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NIPInterface
     */
    @WebEndpoint(name = "NIPInterfacePort")
    public NIPInterface getNIPInterfacePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://core.nip.nibss/", "NIPInterfacePort"), NIPInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (NIPINTERFACE_EXCEPTION!= null) {
            throw NIPINTERFACE_EXCEPTION;
        }
        return NIPINTERFACE_WSDL_LOCATION;
    }

}
